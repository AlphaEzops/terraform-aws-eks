#==========================================
# GLOBAL
#==========================================
global:
  env: development
  helmDefault: false
  valuesFile: values.yaml
  spec:
    project: default
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    source:
      repoURL:
      targetRevision: HEAD



# #==========================================
# # PROJECT
# #==========================================
# project:
#   name:  devops-project
#   description: "DevOps Project"

# #==========================================
# # REPOSITORIES
# #==========================================
# repositories:
#   infra:
#     name: devops
#     url: "git@github.com:Torch-Networks/Ecomm.git"
#     sshPrivateKeySecret: ""

#==========================================
# APPLICATIONS
#==========================================
argocdApplications:
  nginx:
    name: ingress-nginx
    repoURL: "https://kubernetes.github.io/ingress-nginx"
    targetRevision: 4.8.0
    chart: ingress-nginx
    namespace: "ingress-nginx"
    disableAutomated: false
    disable: false
    hasPath: false
    hasChart: true
    helm: true
    hasNameSpace: true
    hasOpcinal: true
    valuesHelm: |
      controller:
        resources:
          limits:
            cpu: 200m
            memory: 180Mi
          requests:
            cpu: 100m
            memory: 90Mi
          # autoscaling:
          #   enabled: enable
          #   minReplicas: 1
          #   maxReplicas: 2
          #   targetCPUUtilizationPercentage: 80
          #   targetMemoryUtilizationPercentage: 80
        metrics:
          enabled: true
        podAnnotations:
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"

  cert-manager:
    name: cert-manager
    repoURL: "git@github.com:AlphaEzops/reveal-eks.git"
    targetRevision: "feature/rds"
    path: "dev/us-east-2/services/system/cert-manager"
    namespace: "cert-manager"
    disableAutomated: false
    disable: false
    hasPath: true
    hasChart: false
    helm: true
    hasNameSpace: true
#  ebs-csi-driver:
#    name: aws-ebs-csi-driver
#    repoURL: "git@github.com:AlphaEzops/reveal-eks.git"
#    targetRevision: "feature/rds"
#    path: "modules/k8s-argo-cd/system/apps/aws-ebs-csi-driver"
#    namespace: "ebs-csi-driver"
#    disableAutomated: false
#    disable: false
#    hasPath: true
#    hasChart: false
#    helm: true
#    hasNameSpace: true
#  prometheus:
#    name: prometheus
#    repoURL: "https://prometheus-community.github.io/helm-charts"
#    targetRevision: 23.1.0
#    chart: "prometheus"
#    namespace: "prometheus-monitoring"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasOpcinal: true
#    hasNameSpace: true
#    valuesHelm: |
#      server:
#        resources:
#           limits:
#             cpu: 1
#             memory: 1Gi
#           requests:
#             cpu: 500m
#             memory: 512Mi
#      extraScrapeConfigs: |
#        - job_name: 'argocd'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - argocd-application-controller-metrics.argocd.svc.cluster.local:8082
#          scrape_interval: 5s
#          scheme: "http"
#        - job_name: 'external-dns'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - external-dns-development.external-dns-system.svc.cluster.local:7979
#          scrape_interval: 5s
#          scheme: "http"
#        - job_name: 'cert-manager'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - cert-manager-development.cert-manager.svc.cluster.local:9402
#          scrape_interval: 5s
#          scheme: "http"
#        - job_name: 'nginx'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - ingress-nginx-development-metrics.ingress-nginx.svc.cluster.local:10254
#
#          scrape_interval: 5s
#          scheme: "http"
#        - job_name: 'jaeger'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - jaeger-development-collector.jaeger-monitoring.svc.cluster.local:14269
#              - jaeger-development-agent.jaeger-monitoring.svc.cluster.local:14271
#              - jaeger-development-query.jaeger-monitoring.svc.cluster.local:16687
#          scrape_interval: 5s
#          scheme: "http"
#        - job_name: 'cluster-autoscaler'
#          metrics_path: /metrics
#          static_configs:
#            - targets:
#              - autoscaling-development-aws-cluster-autoscaler.autoscaler.svc.cluster.local:8085
#          scrape_interval: 5s
#          scheme: "http"
#
#  grafana:
#    name: grafana
#    repoURL: "https://grafana.github.io/helm-charts"
#    targetRevision: 6.60.1
#    chart: "grafana"
#    namespace: "grafana-monitoring"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      # resources:
#      #   limits:
#      #     cpu: 1
#      #     memory: 1Gi
#      #   requests:
#      #     cpu: 500m
#      #     memory: 512Mi
#      datasources:
#        datasources.yaml:
#          apiVersion: 1
#          datasources:
#          - name: Prometheus
#            type: prometheus
#            url: http://prometheus-development-server.prometheus-monitoring.svc.cluster.local
#      dashboardProviders:
#        dashboardproviders.yaml:
#          apiVersion: 1
#          providers:
#          - name: 'default'
#            orgId: 1
#            folder: ''
#            type: file
#            disableDeletion: false
#            editable: true
#            options:
#              path: /var/lib/grafana/dashboards/default
#      dashboards:
#        default:
#          argocd:
#            gnetId: 14584
#            datasource: Prometheus
#          external-dns:
#            gnetId: 15038
#            datasource: Prometheus
#          cert-manager:
#            gnetId: 11001
#            datasource: Prometheus
#          nginx:
#            gnetId: 9614
#            datasource: Prometheus
#          jaeger:
#            gnetId: 10001
#            datasource: Prometheus
#          autoscaler:
#            gnetId: 3831
#            datasource: Prometheus
#
#
#  # grafana-ingress:
#  #   name: grafana-ingress
#  #   namespace: "grafana-monitoring"
#
#
#  external-secret:
#    name: external-secrets
#    repoURL: "https://charts.external-secrets.io"
#    targetRevision: 0.9.5
#    chart: "external-secrets"
#    namespace: "external-secrets"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      resources:
#        requests:
#          cpu: 10m
#          memory: 32Mi
#        limits:
#          cpu: 20m
#          memory: 64Mi
#      serviceAccount:
#        create: true
#        annotations:
#          eks.amazonaws.com/role-arn: "arn:aws:iam::225156675160:role/external-secret"
#  jaeger:
#    name: jaeger
#    repoURL: "https://jaegertracing.github.io/helm-charts"
#    targetRevision: 0.71.15
#    chart: "jaeger"
#    namespace: "jaeger-monitoring"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      agent:
#        resources:
#           limits:
#             cpu: 500m
#             memory: 512Mi
#           requests:
#             cpu: 256m
#             memory: 128Mi
#      query:
#        resources:
#           limits:
#             cpu: 500m
#             memory: 512Mi
#           requests:
#             cpu: 256m
#             memory: 128Mi
#
#      storage:
#        type: cassandra
#        cassandra:
#          host: cassandra-development.cassandra.svc.cluster.local
#          port: 9042
#          user: cassandra
#          existingSecret: secret-to-be
#          existingSecretKey: _DEV_CASSANDRA_PASSWORD
#
#
#      provisionDataStore:
#        cassandra: false
#
#
#  external-dns:
#    name: external-dns
#    repoURL: "https://kubernetes-sigs.github.io/external-dns"
#    targetRevision: 1.13.1
#    chart: "external-dns"
#    namespace: "external-dns-system"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      fullNameOverride: external-dns
#      image:
#        repository: registry.k8s.io/external-dns/external-dns
#        tag: v0.13.1
#      policy: sync
#      provider: aws
#      txtOwnerid: ecomm
#      txtPrefix: edns-
#      rbac:
#        create: true
#      serviceAccount:
#        create: true
#        annotations:
#          eks.amazonaws.com/role-arn: "arn:aws:iam::225156675160:role/external-dns"
#      securityContext:
#        runAsNonRoot: false
#      # resources:
#      #   limits:
#      #     cpu: 500m
#      #     memory: 512Mi
#      #   requests:
#      #     cpu: 256m
#      #     memory: 128Mi
#  autoscaling:
#    name: autoscaling
#    repoURL: "https://kubernetes.github.io/autoscaler"
#    targetRevision: 9.29.3
#    chart: "cluster-autoscaler"
#    namespace: "autoscaler"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      autoDiscovery:
#        clusterName: ecomm
#      rbac:
#        create: true
#        serviceAccount:
#          create: true
#          annotations:
#            eks.amazonaws.com/role-arn: "arn:aws:iam::225156675160:role/cluster-autoscaler"
#
#  efs-csi-driver:
#    name: aws-efs-csi-driver
#    repoURL: "https://github.com/kubernetes-sigs/aws-efs-csi-driver.git"
#    targetRevision: "HEAD"
#    path: "charts/aws-efs-csi-driver"
#    namespace: "efs-csi-driver"
#    disableAutomated: false
#    disable: false
#    hasPath: true
#    hasChart: false
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      node:
#        serviceAccount:
#          annotations:
#            eks.amazonaws.com/role-arn: "arn:aws:iam::225156675160:role/efs-csi"
#
#  cassandra:
#    name: cassandra
#    repoURL: "https://charts.bitnami.com/bitnami"
#    targetRevision: 10.4.5
#    chart: "cassandra"
#    namespace: "cassandra"
#    disableAutomated: false
#    disable: false
#    hasPath: false
#    hasChart: true
#    helm: true
#    hasNameSpace: true
#    hasOpcinal: true
#    valuesHelm: |
#      dbUser:
#        existingSecret:
#          name: secret-to-be
#          keyMapping:
#            cassandra-password: _DEV_CASSANDRA_PASSWORD