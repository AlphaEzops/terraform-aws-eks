pipeline {
    agent {
        kubernetes {
            defaultContainer 'shell'
            yamlFile "jenkins-pod.yaml"
    }
    environment {
        PROJECT = "python-api"
        REGISTRY_USER = "aws-ecr"
    }
    stages {
        stage("Checkout") {
            steps {
                container('shell') {
                    git branch: 'master', credentialsId: 'git-credentials', url: '
                }
            }
        }
        stage("Test") {
            steps {
                container('shell') {
                    sh "docker run --rm ${PROJECT} python -m pytest"
                }
            }
        }
        stage("Build") {
            steps {
                container('shell') {
                    sh "docker build -t ${PROJECT} ."
                }
            }
        }
        stage("Push") {
            steps {
                container('shell') {
                    withCredentials([usernamePassword(credentialsId: "${REGISTRY_USER}", passwordVariable: 'REGISTRY_PASSWORD', usernameVariable: 'REGISTRY_USER')]) {
                        sh "docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}"
                        sh "docker tag ${PROJECT} ${REGISTRY_USER}/${PROJECT}"
                        sh "docker push ${REGISTRY_USER}/${PROJECT}"
                    }
                }
            }
        }
        stage("Deploy with helm") {
            steps {
                container('shell') {
                    sh "helm upgrade --install ${PROJECT} helm/${PROJECT} --set image.repository=${REGISTRY_USER}/${PROJECT} --set image.tag=${BUILD_NUMBER}"
                }
            }
        }
        stage("Health check") {
            steps {
                container('shell') {
                    sh "kubectl rollout status deployment/${PROJECT}"
                }
            }
        }
    }
}