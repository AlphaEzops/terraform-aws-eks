version: 0.2

env:
  shell: bash
#  parameter-store:
#    GITHUB_TOKEN: "/DEV/GH_TOKEN"

phases:
  install:
    on-failure: ABORT
    runtime-versions:
      python: 3.9
    commands:
      # CLONE SOURCE CODE...
      - git clone https://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@github.com/ArthurMaverick/devops_project.git .

      # INSTALL DOCKER
      - yum install -y docker
      - docker --version

      # INSTALL ANSIBLE
      # - pip3 install ansible


      # INSTALL LIBs TEST
      - RELEASE_VERSION=$(grep -Po '(?<=VERSION_ID=")[0-9]' /etc/os-release)
      - rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.rpm
      - pip install pytest

      # INSTALL HELM
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh

      # INSTALL YQ
      - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
      - chmod +x /usr/bin/yq
    finally:
      - echo "All necessary tools are installed"
  pre_build:
    commands:
      - printenv
      - echo Checking all necessary tools and files...
      - make --version
      - aws --version
      - git --version
      - helm version
      - yq --version
    finally:
      - echo "All necessary tools and files are installed"
  build:
    commands:
      - ls -a
      - ls ./dev/us-east-1/services/apps/api-01/source
      - pwd

      # DOCKER LOGIN
      - docker login --username arthursantos2228 --password dckr_pat_JJOgBLH6mZTuRVKrkR-TO3cvirI

      # BUILD IMAGE
      - docker build -t arthursantos2228/devops-default-python-app:${DIND_COMMIT} -f $(pwd)/dev/us-east-1/services/apps/api-01/source/Dockerfile $(pwd)/dev/us-east-1/services/apps/api-01/source

      # TEST UNIT TEST
      - ls
      - pytest $(pwd)/dev/us-east-1/services/apps/api-01/source/app_test.py

      # TEST IMAGE
      - trivy image arthursantos2228/devops-default-python-app:${DIND_COMMIT}

      # PUSH IMAGE
      - docker push -t arthursantos2228/devops-default-python-app:${DIND_COMMIT}

      # DEPLOY IMAGE
      - aws eks update-kubeconfig --name "ecomm-cluster"
      - helm upgrade --install  python-app pwd/dev/us-east-1/services/apps/api-01/helm --create-namespace -n python-app  --set image.tag=${DIND_COMMIT}

      # UPDATE REPOSITORY WITH NEW IMAGE TAG ON HELM
      - rm -rf get_helm.sh
      - yq  -iy ".image.tag |= \"{DIND_COMMIT}\"" ./dev/us-east-1/services/apps/api-01/helm/values.yaml
    finally:
      - echo "finished"
  post_build:
    commands:
      - echo Build Finished on `date`