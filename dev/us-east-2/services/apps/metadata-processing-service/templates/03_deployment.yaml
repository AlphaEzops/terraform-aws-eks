apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.deploymentName }}
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{.Values.service.name }}
  progressDeadlineSeconds: {{ .Values.application.progressDeadlineSeconds }}
  replicas: {{.Values.application.replicaCount}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{.Values.service.name }}
      {{- if .Values.global.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      {{- if or .Values.global.imagePullSecrets .Values.global.ecr.enabled }}
      imagePullSecrets:
        {{- if .Values.global.ecr.enabled }}
        - name: {{ .Values.global.ecr.secret }}
        {{- end }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.application.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Values.application.containerName }}
          image: {{ .Values.application.image }}:{{ .Values.application.tag }}
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: {{ .Values.application.volumeName }}
              mountPath: /app/appsettings.json
              subPath: appsettings.json
          {{- if .Values.application.resources }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          {{- else }}
          # Default resource requests/limits
          resources:
            requests:
              cpu: {{ .Values.application.resources.requests.cpu }}
              memory: {{ .Values.application.resources.requests.memory }}
            limits:
              cpu: {{ .Values.application.resources.limits.cpu }}
              memory: {{ .Values.application.resources.limits.memory }}
          {{- end }}
          {{- if .Values.secrets.enabled }}
          {{- if .Values.secrets.secretDefinitions.data }}
          env:
          {{- include "helpers.create-env-secrets" . | indent 10}}
          {{- end }}
          {{- end }}



      volumes:
        - name: {{ .Values.application.volumeName }}
          configMap:
            name: {{ .Values.configMap.name }}