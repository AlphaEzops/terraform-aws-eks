---
global:
  # K8s namespace. The name of the deployment.
  namespace: "notification-service"

  ecr:
    enabled: false
    secret: "reveal-ecr"
    # -- AWS Account ID (default "475250404638")
    account: ""
    # -- ECR AWS Region (default "us-east-1")
    region: ""
    # -- Set the full hostname/url for the secret rather than building it with account and region
    host: ""
    # -- Docker ECR Password (required)
    # -- Command: aws ecr get-login-password
    password: ""
    # -- Should we run a post install/pre upgrade job to associate the ECR secret with the service account?
    patchDefaultServiceAccount: true

ingress:
  # -- The ingress class (set per ingress)
  # -- Options:
  # -- alb: (AWS Application Load balancer - https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/)
  # -- nginx: Nginx Ingress (https://kubernetes.github.io/ingress-nginx/)
  enabled: true
  # -- Multiple hostnames can be provided if using external DNS, however this may not work for ingress-nginx
  hostname: "ligl-ui.dev.ezops.com.br"
  class: "nginx"
  # -- sslCertArn is only valid when using the 'alb' class. Leave empty for aut-select
  sslCertArn: ""
  # -- Uncomment below to add custom annotations for the public ingress
  annotations: {}
  alb:
    rules: []
    paths: []

application:
  image: "975635808270.dkr.ecr.us-east-2.amazonaws.com/reveal"
  tag: "notification-service"
  name: "notification-service"
  replicaCount: 2
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.io/arch: amd64
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1000Mi


secrets:
  enabled: false
  # -- The secrets provider
  # -- Providers:
  # --- external-secrets: (https://external-secrets.io/v0.5.9/)
  # --- kubernetes: Use kubernetes secret. Add secrets to the 'kubernetes' section below.
  provider: "external-secrets"

  # -- OPTIONS FOR: 'external-secrets' -- #
  externalSecrets:
    # -- The external-secrets provider
    # -- Providers:
    # --- aws: AWS SecretsManager
    provider: aws
    # -- Options for aws (AWS SecretsManager)
    aws:
      # -- Region: The AWS region where the secret resides (default "us-east-1")
      region: "us-east-2"
    enabled: true
    # Specifies whether a service account should be created
    create: true

    # Specifies the name of the kubernetes secrets
    name: "notification-service-secrets"

    # Specifies the service account for external-secrets
    serviceAccount:
      name: "notification-service-sa"
      arn: ""

  secretDefinitions:
    data:
      - name: DB_HOST
        key: prod/reveal
        property: DB_HOST
      - name: DB_PORT
        key: prod/reveal
        property: DB_PORT
      - name: DB_NAME
        key: prod/reveal
        property: DB_NAME
      - name: DB_USERNAME
        key: prod/reveal
        property: DB_USERNAME
      - name: DB_PASSWORD
        key: prod/reveal
        property: DB_PASSWORD



configMap:
  name: "notification-service-config" 
  configuration: |2
    {
        "ConnectionStrings": {
            "VMDB": "Data Source=10.0.0.8\\OPTIMUM_DEV,58081;Initial Catalog=DEV_MASTER;Persist Security Info=True;User ID=DITUser;Password=OptimumDIT@Vertical123;Encrypt=false"
        },
        "Logging": {
            "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
            }
        },
        "AllowedHosts": "*",
        "Serilog": {
            "Using": [ "Serilog.Sinks.File", "Serilog.Sinks.Console" ],
            "MinimumLevel": {
                "Default": "Information",
                "Override": {
                    "Microsoft": "Warning",
                    "System": "Warning"
                }
            },
            "WriteTo": [
                {
                    "Name": "Console"
                },
                {
                    "Name": "File",
                    "Args": {
                        "path": "/logs/core/log-.txt",
                        "rollOnFileSizeLimit": true,
                        "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter,Serilog.Formatting.Compact",
                        "rollingInterval": "Day"
                    }
                }
            ],
            "Enrich": [ "FromLogContext", "WithThreadId", "WithMachineName" ]
        },
        "Tokens": {
            "Key": "IxrAjDoa2FqEl3RIhrSrUJELhUckePEPVpaePlS_Poa",
            "Issuer": "VerticalAuthority",
            "Audience": "Everyone",
            "AccessTokenExpiry": 10,
            "RefreshTokenExpiry": 60
        },
        "SecurityKeys": {
            "EncyKey": "VDev@2016",
            "DefaultPasswordKey": "VerticalPassword#123"
        },
        "WebSocketSetting": {
            "KeepAliveInterval": 120,
            "BufferSize": 4,
            "DefaultBuffer": 1024,
            "TimeOut": 3600000
        },
        "SwaggerSettings": {
            "Version": "V1",
            "Title": "Notification Service"
        },
        "ConnectionStringSettings": {
            "MaxTryCount": 10,
            "MaxDelayTryInSeconds": 30
        },
        "redis": {
            "host": "127.0.0.1",
            "name": "localhost",
            "port": 6379,
            "expiry": 24 
        },
        "Environment": "dev",
        "Origion": "http://10.1.0.13:8081",
        "Service": "NotificationService"
    }
