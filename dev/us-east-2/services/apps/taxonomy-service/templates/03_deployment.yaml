apiVersion: apps/v1
kind: Deployment
metadata:
  name: taxonomy-service-deployment
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  selector:
    matchLabels:
      app: deployment-taxonomy-service
  progressDeadlineSeconds: 600
  replicas: {{.Values.application.replicaCount}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-taxonomy-service
      {{- if .Values.global.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:

    ## Init script will run and update the connection string with env variables
      initContainers:
        - name: update-connection-string
          image: 975635808270.dkr.ecr.us-east-2.amazonaws.com/reveal:transform-script-new
          volumeMounts:
            - name: config-taxonomy-service-volume
              mountPath: /app
          env:
            - name: DB_HOST
              value: "teste" 
            - name: DB_PORT
              value: "test2" 
            - name: DB_NAME
              value: "TESTE" 
            - name: DB_USERNAME
              value: "test" 
            - name: DB_PASSWORD
              value: "12345" 

      {{- if or .Values.global.imagePullSecrets .Values.global.ecr.enabled }}
      imagePullSecrets:
        {{- if .Values.global.ecr.enabled }}
        - name: {{ .Values.global.ecr.secret }}
        {{- end }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.application.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Values.application.name }}
          image: {{ .Values.application.image }}:{{ .Values.application.tag }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config-taxonomy-service-volume
              mountPath: /app/appsettings.json
              subPath: appsettings.json 
          {{- if .Values.application.resources }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          {{- else }}
          # Default resource requests/limits
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          {{- end }}
          {{- if .Values.secrets.secretDefinitions.data }}
          env:
          {{- include "helpers.create-env-secrets" . | indent 10}}
          {{- end }}

      volumes:
        - name: config-taxonomy-service-volume
          configMap:
            name: {{ .Values.configMap.name }}