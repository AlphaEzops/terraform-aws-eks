{{- if .Values.ingress.enabled }}
{{- $ingress_class := (.Values.ingress.class | default "alb") -}}
{{- if eq $ingress_class "nginx" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  name: {{ .Values.global.namespace }}-ingress
  annotations:
    # {{- if .Values.ingress.hostname }}
    # external-dns.alpha.kubernetes.io/hostname: {{ .Values.ingress.hostname }}
    # {{- end }}
    # Nginx ingress (nginx)
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/upstream-vhost: {{ quote .Values.ingress.hostname }}
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    ingress.kubernetes.io/force-ssl-redirect:  "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/backend-protocol:  "HTTP"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "300" 
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "300"  
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "300" 
spec:
  ingressClassName: {{ $ingress_class }}
  tls:
    - hosts:
      - {{ .Values.ingress.hostname }}
      secretName: "reveal-ops"
  rules:
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          - path: /
            pathType:  Prefix
            backend:
              service:
                name: service-ligl-ui
                port:
                  number: 80
{{- end }}
{{- end }}
